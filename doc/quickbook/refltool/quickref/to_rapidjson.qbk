[/ Copyright Matus Chochlik.                                        ]
[/ Distributed under the Boost Software License, Version 1.0.       ]
[/ See accompanying file LICENSE_1_0.txt or copy at                 ]
[/  http://www.boost.org/LICENSE_1_0.txt                            ]

[/--------------------------------------------]
[section:to_rapidjson [^to_rapidjson] function]
[/--------------------------------------------]

[header to_rapidjson]

[import to_rapidjson.cpp]

The [^to_rapidjson] function updates the specified [^__rapidjson_GenericValue]
[^rjval] to represent the specified instance [^val] of type [^T] as an JSON
object.

[refltool_to_rapidjson_value]

There is also the following overload of [^to_rapidjson] operating on the
specified [^__rapidjson_GenericDocument] [^rjdoc], using its allocator.

[refltool_to_rapidjson_doc]

The [^to_rapidjson] function uses the [^rapidjson_compositor] template
and reflection to support various C++ types (classes, enums, standard containers
and tuples, etc.) out of the box.

Support for serialization of other types can be implemented by providing
a specialization of the [^rapidjson_compositor] template.

[refltool_rapidjson_compositor]

[endsect]

[/ Copyright Matus Chochlik.                                        ]
[/ Distributed under the Boost Software License, Version 1.0.       ]
[/ See accompanying file LICENSE_1_0.txt or copy at                 ]
[/  http://www.boost.org/LICENSE_1_0.txt                            ]

[/=========================================]
[section:header [^reflexpr] header synopsis]
[/=========================================]

The standard [^<reflexpr>] header implements the ['interface] of the
[link reflexpr.intro.metaobjects metaobject types]
[link reflexpr.quickref.operator generated by the compiler].

[import header.cpp]

[reflexpr_header_open_std]

The [^std::is_metaobject] type-trait is used to distinguish between
[link reflexpr.intro.metaobjects metaobject types] and all other types.

[reflexpr_header_is_metaobject]

[#namespace_meta]
All other reflection-related definitions are nested in the [^std::meta]
namespace:

[reflexpr_header_open_meta]

The [^meta::Object] concept is modelled by stateless anonymous types generated
by the compiler, which allow access to metadata reflecting specific program
declarations.

[reflexpr_header_concepts_Object]
[reflexpr_header_concepts_ObjectSequence]
[reflexpr_header_concepts]

[reflexpr_header_close_meta]
[reflexpr_header_close_std]

[endsect]
